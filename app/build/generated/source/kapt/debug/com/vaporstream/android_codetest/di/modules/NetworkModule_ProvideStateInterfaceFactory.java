// Generated by Dagger (https://dagger.dev).
package com.vaporstream.android_codetest.di.modules;

import com.vaporstream.android_codetest.utilities.StatesInterface;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideStateInterfaceFactory implements Factory<StatesInterface> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideStateInterfaceFactory(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public StatesInterface get() {
    return provideStateInterface(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideStateInterfaceFactory create(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideStateInterfaceFactory(module, retrofitProvider);
  }

  public static StatesInterface provideStateInterface(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.provideStateInterface(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
