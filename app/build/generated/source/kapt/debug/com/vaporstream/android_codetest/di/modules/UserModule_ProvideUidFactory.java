// Generated by Dagger (https://dagger.dev).
package com.vaporstream.android_codetest.di.modules;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.work.Data;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserModule_ProvideUidFactory implements Factory<LiveData<Long>> {
  private final UserModule module;

  private final Provider<MutableLiveData<Data>> dataProvider;

  public UserModule_ProvideUidFactory(UserModule module,
      Provider<MutableLiveData<Data>> dataProvider) {
    this.module = module;
    this.dataProvider = dataProvider;
  }

  @Override
  public LiveData<Long> get() {
    return provideUid(module, dataProvider.get());
  }

  public static UserModule_ProvideUidFactory create(UserModule module,
      Provider<MutableLiveData<Data>> dataProvider) {
    return new UserModule_ProvideUidFactory(module, dataProvider);
  }

  public static LiveData<Long> provideUid(UserModule instance, MutableLiveData<Data> data) {
    return Preconditions.checkNotNullFromProvides(instance.provideUid(data));
  }
}
