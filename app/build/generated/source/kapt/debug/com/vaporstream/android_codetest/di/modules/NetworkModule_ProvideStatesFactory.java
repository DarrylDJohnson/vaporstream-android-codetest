// Generated by Dagger (https://dagger.dev).
package com.vaporstream.android_codetest.di.modules;

import androidx.lifecycle.LiveData;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.UUID;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideStatesFactory implements Factory<LiveData<String[]>> {
  private final NetworkModule module;

  private final Provider<UUID> idProvider;

  public NetworkModule_ProvideStatesFactory(NetworkModule module, Provider<UUID> idProvider) {
    this.module = module;
    this.idProvider = idProvider;
  }

  @Override
  public LiveData<String[]> get() {
    return provideStates(module, idProvider.get());
  }

  public static NetworkModule_ProvideStatesFactory create(NetworkModule module,
      Provider<UUID> idProvider) {
    return new NetworkModule_ProvideStatesFactory(module, idProvider);
  }

  public static LiveData<String[]> provideStates(NetworkModule instance, UUID id) {
    return Preconditions.checkNotNull(instance.provideStates(id), "Cannot return null from a non-@Nullable @Provides method");
  }
}
